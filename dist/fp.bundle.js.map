{"version":3,"file":"fp.bundle.js","mappings":"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","sources":["webpack://fauxpas/./src/components/cookie.js","webpack://fauxpas/./src/components/params.js","webpack://fauxpas/./src/lib/dom.js","webpack://fauxpas/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://fauxpas/webpack/bootstrap","webpack://fauxpas/webpack/runtime/make namespace object","webpack://fauxpas/./src/main.js"],"sourcesContent":["import Cookies from 'js-cookie'\nimport dom from '../lib/dom'\n\n/**\n * Read all fp-ccokie inputs on form and store in a cookie\n *\n * @param {HTMLFormElement} form\n */\nconst cookiesLoad = form => {\n    // Read all inputs submited\n    form.querySelectorAll('input[fp-cookie]').forEach(\n        /**\n         * @type {HTMLInputElement}\n         */\n        input => {\n            const cookieName = input.getAttribute('fp-cookie')\n            const value = dom.input.getValue(input)\n            Cookies.set(cookieName, value)\n        }\n    )\n}\n\n/**\n * Retrieve stored cookies and write into fp-cookie tagged elements\n */\nconst cookiesUnload = () => {\n    dom.qall('[fp-cookie]').forEach(\n        /**\n         * @param {HTMLElement} elem\n         */\n        elem => {\n            const cookieName = elem.getAttribute('fp-cookie')\n            const value = Cookies.get(cookieName)\n            dom.setValue(elem, value)\n        }\n    )\n}\n\n/**\n * Store all submited input with fp-cookie attribute\n *\n * @param {Event} event\n */\nconst onSubmit = event => {\n    cookiesLoad(event.submitter)\n\n    // Also update existing elements\n    cookiesUnload()\n}\n\n/**\n * Load cookies into variables and load set them\n * whenever a form is submited\n */\nconst onLoad = () => {\n    console.log('cookie.js onLoad')\n    // Create listener to all forms\n    dom.qall('form').forEach(f => {\n        // eslint-disable-next-line no-param-reassign\n        f.onsubmit = onSubmit\n    })\n\n    cookiesUnload()\n}\n\nconsole.log('cookie.js')\nwindow.onload = onLoad\n","import dom from '../lib/dom'\n\n/**\n * Handles URL changes\n * Set parameters in input fields with attributes\n * fp-param : paramName\n *\n * Ex: acme.con/food?include-cat=true\n * It will search for an input field with attribute fp-param = include-cat\n * and set its value to true\n */\nconst onHashChange = () => {\n    // Split to remove # from location.hash\n    // eslint-disable-next-line no-restricted-globals\n    const params = new URLSearchParams(location.hash.split('?')?.[1])\n\n    params.forEach((value, key) => {\n        /**\n         * @type {HTMLInputElement}\n         */\n        const input = dom.q(`input[fp-param=\"${key}\"]`)\n        dom.input.setValue(input, value)\n    })\n}\n\nwindow.onhashchange = onHashChange\n","/* eslint-disable no-param-reassign */\n/**\n * Dom related methods\n */\nclass Dom {\n    /**\n     * Query selector\n     *\n     * @param {string} query Dom query string\n     * @returns {Element}\n     */\n    static q(query) {\n        return document.querySelector(query)\n    }\n\n    /**\n     * Query selector all\n     *\n     * @param {string} query Dom query string\n     * @returns {NodeList}\n     */\n    static qall(query) {\n        return document.querySelectorAll(query)\n    }\n\n    /**\n     * Updates a HTML element value or text\n     *\n     * @param {HTMLElement} elem\n     * @param {*} value\n     */\n    static setValue(elem, value) {\n        if (!elem) return\n\n        switch (elem.type) {\n            case 'input':\n                this.input.setValue(elem, value)\n                break\n\n            default:\n                elem.innerText = value\n                break\n        }\n    }\n\n    static input = class {\n        /**\n         * Set value on input field. Handles checkbox and radio\n         * buttons with click instead of updating value only\n         *\n         * @param {HTMLInputElement} input\n         * @param {any} value\n         */\n        static setValue(input, value) {\n            if (!input) return\n\n            switch (input.type) {\n                case 'radio':\n                    // Find the element to be checked within the same radio group name\n                    this.radio.setValue(input.name, value)\n                    break\n                case 'checkbox':\n                    input.click()\n                    break\n                default:\n                    input.value = value\n                    break\n            }\n        }\n\n        /**\n         * Get value from HTML input element\n         *\n         * @param {HTMLElement} input\n         * @returns {any}\n         */\n        // eslint-disable-next-line consistent-return\n        static getValue(input) {\n            if (input)\n                switch (input.type) {\n                    case 'radio':\n                        return this.radio.getValue(input)\n                    case 'checkbox':\n                        return input.checked\n                    default:\n                        return input.value\n                }\n        }\n\n        static radio = class {\n            /**\n             * Check a value in a radio button group\n             *\n             * @param {string} radioName\n             * @param {string} value\n             */\n            static setValue(radioName, value) {\n                const radio = Dom.q(`input[name=\"${radioName}\"][value=\"${value}\"]`)\n                radio.click()\n            }\n\n            static getValue(radioName) {\n                return Dom.q(`input[name=\"${radioName}\"]:checked`)?.value\n            }\n        }\n    }\n}\n\nconst dom = Dom\n\nexport default dom\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './components/cookie'\nimport './components/params'\n\nconsole.log('main.js')\nwindow.addEventListener('load', () => console.log('mian.js onload'))\n"],"names":["Cookies","dom","cookiesLoad","form","querySelectorAll","forEach","input","cookieName","getAttribute","value","getValue","set","cookiesUnload","qall","elem","get","setValue","onSubmit","event","submitter","onLoad","console","log","f","onsubmit","window","onload","onHashChange","params","URLSearchParams","location","hash","split","key","q","onhashchange","Dom","query","document","querySelector","type","innerText","radio","name","click","checked","radioName","addEventListener"],"sourceRoot":""}