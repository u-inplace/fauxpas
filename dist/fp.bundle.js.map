{"version":3,"file":"fp.bundle.js","mappings":"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","sources":["webpack://fauxpas/./src/components/cookie.js","webpack://fauxpas/./src/components/params.js","webpack://fauxpas/./src/components/validation.js","webpack://fauxpas/./src/lib/dom.js","webpack://fauxpas/./node_modules/js-cookie/dist/js.cookie.mjs","webpack://fauxpas/webpack/bootstrap","webpack://fauxpas/webpack/runtime/make namespace object","webpack://fauxpas/./src/main.js"],"sourcesContent":["import Cookies from 'js-cookie'\nimport dom from '../lib/dom'\n\nclass FpCookie {\n    static STORE = '__fp_store'\n\n    /**\n     * Store a cookie\n     * @param {string} name\n     * @param {any} value\n     */\n    static set(name, value) {\n        this.store[name] = value\n        Cookies.set(this.STORE, this.store, { secure: true, sameSite: 'strict' })\n    }\n\n    /**\n     * Return a cookie from store\n     * @param {string} name\n     * @returns {any}\n     */\n    static get(name) {\n        return this.store?.[name]\n    }\n\n    /**\n     * Delete a cookie\n     * @param {string} name\n     */\n    static clear() {\n        Cookies.remove(this.STORE)\n    }\n\n    static get store() {\n        return Cookies.get(this.STORE) || {}\n    }\n}\n\n/**\n * Read all fp-ccokie inputs on form and store in a cookie\n *\n * @param {HTMLFormElement} form\n */\nconst cookiesLoad = form => {\n    // Read all inputs submited\n    form.querySelectorAll('input[data-fp-cookie]').forEach(\n        /**\n         * @type {HTMLInputElement}\n         */\n        input => {\n            const cookieName = input.getAttribute('data-fp-cookie')\n            const value = dom.input.getValue(input)\n            FpCookie.set(cookieName, value)\n        }\n    )\n}\n\n/**\n * Retrieve stored cookies and write into data-fp-cookie tagged elements\n */\nconst cookiesUnload = () => {\n    dom.qall('[data-fp-cookie]').forEach(\n        /**\n         * @param {HTMLElement} elem\n         */\n        elem => {\n            const cookieName = elem.getAttribute('data-fp-cookie')\n            const value = FpCookie.get(cookieName)\n            value && dom.setValue(elem, value)\n        }\n    )\n}\n\n/**\n * Store all submited input with data-fp-cookie attribute\n *\n * @param {Event} event\n */\nconst onSubmit = event => {\n    // Submitter is the input button type=submit\n    cookiesLoad(event.submitter.parentElement)\n\n    // Also update existing elements\n    cookiesUnload()\n}\n\n/**\n * Load cookies into variables and load set them\n * whenever a form is submited\n */\nconst onLoad = () => {\n    // Create listener to all forms\n    dom.qall('form').forEach(f => {\n        // eslint-disable-next-line no-param-reassign\n        f.addEventListener('submit', onSubmit)\n    })\n\n    cookiesUnload()\n}\n\nwindow.addEventListener('load', onLoad)\n","import dom from '../lib/dom'\n\n/**\n * Handles URL changes\n * Set parameters in input fields with attributes\n * fp-param : paramName\n *\n * Ex: acme.con/food?include-cat=true\n * It will search for an input field with attribute fp-param = include-cat\n * and set its value to true\n */\nconst onHashChange = () => {\n    // Split to remove # from location.hash\n    // eslint-disable-next-line no-restricted-globals\n    const params = new URLSearchParams(location.search || location.hash.split('?')?.[1])\n\n    params.forEach((value, key) => {\n        /**\n         * @type {HTMLInputElement}\n         */\n        const input = dom.q(`input[data-fp-param=\"${key}\"]`)\n        dom.input.setValue(input, value)\n    })\n}\n\nwindow.addEventListener('hashchange', onHashChange)\nwindow.addEventListener('load', onHashChange)\n","import dom from '../lib/dom'\n\n/**\n * Slice input if maxlength is reached\n *\n * @param {InputEvent} e\n */\nconst maxLength = e => {\n    const input = e.target\n    const { value } = input\n    const { maxLength: max } = input\n    if (value > max) input.value = value.slice(0, max)\n}\n\n/**\n * Remove all input that does not match inputMode\n *\n * @param {InputEvent} e\n */\nconst inputMode = e => {\n    const input = e.target\n    const { value } = input\n\n    switch (input.inputMode) {\n        case 'numeric':\n            input.value = value.replace(/\\D/g, '')\n            break\n        default:\n            break\n    }\n}\n\n/**\n * Add event listners for input fields with\n * data-fp-validation\n *\n * Possible values\n *  maxlength: will strip input if maxlength is reached\n *  inputmode: will only allow input of type specified on inputmode\n */\nconst setupWatchers = () => {\n    /**\n     * Setup watcher for input\n     *\n     * @param {HTMLInputElement} input\n     */\n    const setupInput = input => {\n        const validations = input.getAttribute('data-fp-validation')?.split(',')\n\n        // Only setup if dependend attribute is found\n        validations.forEach(v => {\n            const validators = {\n                maxlength: maxLength,\n                inputmode: inputMode\n            }\n\n            input.getAttribute(v) && input.addEventListener('input', validators[v], true)\n        })\n    }\n\n    dom.qall('input[data-fp-validation]').forEach(input => setupInput(input))\n}\n\nwindow.addEventListener('load', setupWatchers)\n","/* eslint-disable no-param-reassign */\n/**\n * Dom related methods\n */\nclass Dom {\n    /**\n     * Query selector\n     *\n     * @param {string} query Dom query string\n     * @returns {Element}\n     */\n    static q(query) {\n        return document.querySelector(query)\n    }\n\n    /**\n     * Query selector all\n     *\n     * @param {string} query Dom query string\n     * @returns {NodeList}\n     */\n    static qall(query) {\n        return document.querySelectorAll(query)\n    }\n\n    /**\n     * Updates a HTML element value or text\n     *\n     * @param {HTMLElement} elem\n     * @param {*} value\n     */\n    static setValue(elem, value) {\n        if (!elem) return\n\n        switch (elem.tagName) {\n            case 'INPUT':\n                this.input.setValue(elem, value)\n                break\n\n            default:\n                elem.innerText = value\n                break\n        }\n    }\n\n    static input = class {\n        /**\n         * Set value on input field. Handles checkbox and radio\n         * buttons with click instead of updating value only\n         *\n         * @param {HTMLInputElement} input\n         * @param {any} value\n         */\n        static setValue(input, value) {\n            if (!input) return\n\n            switch (input.type) {\n                case 'radio':\n                    // Find the element to be checked within the same radio group name\n                    this.radio.setValue(input.name, value)\n                    break\n                case 'checkbox':\n                    input.checked = false\n                    input.click()\n                    break\n                default:\n                    input.value = value\n                    break\n            }\n        }\n\n        /**\n         * Get value from HTML input element\n         *\n         * @param {HTMLElement} input\n         * @returns {any}\n         */\n        // eslint-disable-next-line consistent-return\n        static getValue(input) {\n            if (input)\n                switch (input.type) {\n                    case 'radio':\n                        return this.radio.getValue(input.name)\n                    case 'checkbox':\n                        return input.checked\n                    default:\n                        return input.value\n                }\n        }\n\n        static radio = class {\n            /**\n             * Check a value in a radio button group\n             * For some wierd reason click() does not add decoration to input as if it was\n             * clicked\n             *\n             * @param {string} radioName\n             * @param {string} value\n             */\n            static setValue(radioName, value) {\n                const radio = Dom.q(`input[name=\"${radioName}\"][value=\"${value}\"]`)\n                radio.checked &&= false\n\n                // Voodoo to make the click also apply the correct classes\n                setTimeout(() => radio?.click(), 300)\n            }\n\n            static getValue(radioName) {\n                return Dom.q(`input[name=\"${radioName}\"]:checked`)?.value\n            }\n        }\n    }\n}\n\nconst dom = Dom\n\nexport default dom\n","/*! js-cookie v3.0.1 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (key, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    key = encodeURIComponent(key)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      key + '=' + converter.write(value, key) + stringifiedAttributes)\n  }\n\n  function get (key) {\n    if (typeof document === 'undefined' || (arguments.length && !key)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var foundKey = decodeURIComponent(parts[0]);\n        jar[foundKey] = converter.read(value, foundKey);\n\n        if (key === foundKey) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return key ? jar[key] : jar\n  }\n\n  return Object.create(\n    {\n      set: set,\n      get: get,\n      remove: function (key, attributes) {\n        set(\n          key,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport default api;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './components/cookie'\nimport './components/params'\nimport './components/validation'\n"],"names":["Cookies","dom","FpCookie","STORE","set","name","value","store","secure","sameSite","get","clear","remove","cookiesLoad","form","querySelectorAll","forEach","input","cookieName","getAttribute","getValue","cookiesUnload","qall","elem","setValue","onSubmit","event","submitter","parentElement","onLoad","f","addEventListener","window","onHashChange","params","URLSearchParams","location","search","hash","split","key","q","maxLength","e","target","max","slice","inputMode","replace","setupWatchers","setupInput","validations","v","validators","maxlength","inputmode","Dom","query","document","querySelector","tagName","innerText","type","radio","checked","click","radioName","setTimeout"],"sourceRoot":""}