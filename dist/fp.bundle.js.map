{"version":3,"file":"fp.bundle.js","mappings":"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","sources":["webpack:///./src/components/cookie.js","webpack:///./src/components/params.js","webpack:///./src/lib/dom.js","webpack:///./src/main.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["import Cookies from 'js-cookie'\nimport dom from '../lib/dom'\n\n/**\n * Read all fp-ccokie inputs on form and store in a cookie\n *\n * @param {HTMLFormElement} form\n */\nconst cookiesLoad = form => {\n    // Read all inputs submited\n    form.querySelectorAll('input[fp-cookie]').forEach(\n        /**\n         * @type {HTMLInputElement}\n         */\n        input => {\n            const cookieName = input.getAttribute('fp-cookie')\n            const value = dom.input.getValue(input)\n            Cookies.set(cookieName, value)\n        }\n    )\n}\n\n/**\n * Retrieve stored cookies and write into fp-cookie tagged elements\n */\nconst cookiesUnload = () => {\n    dom.qall('[fp-cookie]').forEach(\n        /**\n         * @param {HTMLElement} elem\n         */\n        elem => {\n            const cookieName = elem.getAttribute('fp-cookie')\n            const value = Cookies.get(cookieName)\n            dom.setValue(elem, value)\n        }\n    )\n}\n\n/**\n * Store all submited input with fp-cookie attribute\n *\n * @param {Event} event\n */\nconst onSubmit = event => {\n    cookiesLoad(event.submitter)\n\n    // Also update existing elements\n    cookiesUnload()\n}\n\n/**\n * Load cookies into variables and load set them\n * whenever a form is submited\n */\nconst onLoad = () => {\n    // Create listener to all forms\n    dom.qall('form').forEach(f => {\n        // eslint-disable-next-line no-param-reassign\n        f.onsubmit = onSubmit\n    })\n\n    cookiesUnload()\n}\n\nwindow.onload = onLoad\n","import dom from '../lib/dom'\n\n/**\n * Handles URL changes\n * Set parameters in input fields with attributes\n * fp-param : paramName\n *\n * Ex: acme.con/food?include-cat=true\n * It will search for an input field with attribute fp-param = include-cat\n * and set its value to true\n */\nconst onHashChange = () => {\n    // Split to remove # from location.hash\n    // eslint-disable-next-line no-restricted-globals\n    const params = new URLSearchParams(location.hash.split('?')?.[1])\n\n    params.forEach((value, key) => {\n        /**\n         * @type {HTMLInputElement}\n         */\n        const input = dom.q(`input[fp-param=\"${key}\"]`)\n        dom.input.setValue(input, value)\n    })\n}\n\nwindow.onhashchange = onHashChange\n","/* eslint-disable no-param-reassign */\n/**\n * Dom related methods\n */\nclass Dom {\n    /**\n     * Query selector\n     *\n     * @param {string} query Dom query string\n     * @returns {Element}\n     */\n    static q(query) {\n        return document.querySelector(query)\n    }\n\n    /**\n     * Query selector all\n     *\n     * @param {string} query Dom query string\n     * @returns {NodeList}\n     */\n    static qall(query) {\n        return document.querySelectorAll(query)\n    }\n\n    /**\n     * Updates a HTML element value or text\n     *\n     * @param {HTMLElement} elem\n     * @param {*} value\n     */\n    static setValue(elem, value) {\n        if (!elem) return\n\n        switch (elem.type) {\n            case 'input':\n                this.input.setValue(elem, value)\n                break\n\n            default:\n                elem.innerText = value\n                break\n        }\n    }\n\n    static input = class {\n        /**\n         * Set value on input field. Handles checkbox and radio\n         * buttons with click instead of updating value only\n         *\n         * @param {HTMLInputElement} input\n         * @param {any} value\n         */\n        static setValue(input, value) {\n            if (!input) return\n\n            switch (input.type) {\n                case 'radio':\n                    // Find the element to be checked within the same radio group name\n                    this.radio.setValue(input.name, value)\n                    break\n                case 'checkbox':\n                    input.click()\n                    break\n                default:\n                    input.value = value\n                    break\n            }\n        }\n\n        /**\n         * Get value from HTML input element\n         *\n         * @param {HTMLElement} input\n         * @returns {any}\n         */\n        // eslint-disable-next-line consistent-return\n        static getValue(input) {\n            if (input)\n                switch (input.type) {\n                    case 'radio':\n                        return this.radio.getValue(input)\n                    case 'checkbox':\n                        return input.checked\n                    default:\n                        return input.value\n                }\n        }\n\n        static radio = class {\n            /**\n             * Check a value in a radio button group\n             *\n             * @param {string} radioName\n             * @param {string} value\n             */\n            static setValue(radioName, value) {\n                const radio = Dom.q(`input[name=\"${radioName}\"][value=\"${value}\"]`)\n                radio.click()\n            }\n\n            static getValue(radioName) {\n                return Dom.q(`input[name=\"${radioName}\"]:checked`)?.value\n            }\n        }\n    }\n}\n\nconst dom = Dom\n\nexport default dom\n","import './components/cookie'\nimport './components/params'\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"fp\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfauxpas\"] = self[\"webpackChunkfauxpas\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], function() { return __webpack_require__(\"./src/main.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["Cookies","dom","cookiesLoad","form","querySelectorAll","forEach","input","cookieName","getAttribute","value","getValue","set","cookiesUnload","qall","elem","get","setValue","onSubmit","event","submitter","onLoad","f","onsubmit","window","onload","onHashChange","params","URLSearchParams","location","hash","split","key","q","onhashchange","Dom","query","document","querySelector","type","innerText","radio","name","click","checked","radioName"],"sourceRoot":""}